# test_api.py
import requests
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
API_KEY = os.getenv("OPENAI_API_KEY")
BASE_URL = os.getenv("OPENAI_BASE_URL")
MODEL = "qwen2.5-32b-instruct"

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
if not API_KEY:
    print("‚ùå –û—à–∏–±–∫–∞: OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
    exit(1)
if not BASE_URL:
    print("‚ùå –û—à–∏–±–∫–∞: OPENAI_BASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
    exit(1)

# URL –¥–ª—è —Ç–µ—Å—Ç–∞
url = f"{BASE_URL}/models"

# –ó–∞–≥–æ–ª–æ–≤–∫–∏
headers = {
    "Authorization": f"Bearer {API_KEY}",
    "Content-Type": "application/json"
}

print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ API...")

# --- –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π ---
print("\n1. –ó–∞–ø—Ä–æ—Å –∫ /models...")
try:
    response = requests.get(url, headers=headers, timeout=10)
    if response.status_code == 200:
        models = response.json()
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ! –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:")
        for model in models.get("data", []):
            print(f"  - {model['id']}")
        if MODEL in [m['id'] for m in models.get("data", [])]:
            print(f"‚úÖ –ú–æ–¥–µ–ª—å '{MODEL}' –¥–æ—Å—Ç—É–ø–Ω–∞!")
        else:
            print(f"‚ö†Ô∏è  –ú–æ–¥–µ–ª—å '{MODEL}' –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ.")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code} ‚Äî {response.text}")
except Exception as e:
    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ {BASE_URL}: {str(e)}")

# --- –¢–µ—Å—Ç 2: –ü—Ä–æ—Å—Ç–æ–π chat.completions –∑–∞–ø—Ä–æ—Å ---
print("\n2. –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ /chat/completions...")
try:
    response = requests.post(
        f"{BASE_URL}/chat/completions",
        headers=headers,
        json={
            "model": MODEL,
            "messages": [{"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç! –†–∞–±–æ—Ç–∞–µ—à—å?"}],
            "max_tokens": 10
        },
        timeout=15
    )
    if response.status_code == 200:
        result = response.json()
        print("‚úÖ –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("–û—Ç–≤–µ—Ç:", result["choices"][0]["message"]["content"].strip())
    elif response.status_code == 400:
        print(f"‚ùå 400 Bad Request: {response.text}")
        print("üí° –≠—Ç–æ –º–æ–∂–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–æ–≤–∞ —Ç—É–ª–∑–æ–≤ –Ω–µ –≤–∫–ª—é—á–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}: {response.text}")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}")