# main.py
import pandas as pd
from agents.tools_wrapper import set_current_data, ALL_TOOLS
from agents.analyst import create_analyst_agent
from agents.executor import create_executor_agent
from agents.summarizer import generate_summary


from dotenv import load_dotenv
import os

load_dotenv()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–∞
if not os.getenv("OPENAI_API_KEY"):
    raise ValueError("OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")
if not os.getenv("OPENAI_BASE_URL"):
    raise ValueError("OPENAI_BASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")


def main(data_path: str, target_column: str, output_report: str = "report.md"):
    # 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    df = pd.read_csv(data_path)
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {df.shape[0]} —Å—Ç—Ä–æ–∫, {df.shape[1]} —Å—Ç–æ–ª–±—Ü–æ–≤")

    # 2. –ü–µ—Ä–µ–¥–∞—ë–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç—É–ª–∑—ã
    set_current_data(df, target_column)

    # 3. –°–æ–∑–¥–∞—ë–º –∞–≥–µ–Ω—Ç–æ–≤
    analyst = create_analyst_agent(ALL_TOOLS)
    executor = create_executor_agent(ALL_TOOLS, analyst["prompt"], analyst["llm"])

    # 4. –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
    print("\nüîç –ó–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã...\n")
    result = executor.invoke({
        "messages": [
            {"role": "user", "content": f"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–∞–Ω–Ω—ã–µ –∏ –Ω–∞–π–¥–∏, —á–µ–º –≥—Ä—É–ø–ø–∞ 1 –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –≥—Ä—É–ø–ø—ã 0 –ø–æ –ø—Ä–∏–∑–Ω–∞–∫—É '{target_column}'."}
        ]
    })

    # 5. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á—ë—Ç
    print("\nüìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞...")
    summary = generate_summary(str(result), filename=data_path.split("/")[-1])

    # 6. –°–æ—Ö—Ä–∞–Ω—è–µ–º
    with open(output_report, "w", encoding="utf-8") as f:
        f.write(summary)
    print(f"\n‚úÖ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {output_report}")

if __name__ == "__main__":
    main("data/telecom_eda_data.csv", target_column="Churn", output_report="report.md")