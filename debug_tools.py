# debug_tools.py
# –†—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–≤–æ–¥–∞ 
# –ó–∞–ø—É—Å–∫: python debug_tools.py


import pandas as pd
from tools.primary_feature_finder import primary_feature_finder
from tools.correlation_analysis import correlation_analysis
from tools.descriptive_stats_comparator import descriptive_stats_comparator
from tools.categorical_feature_analysis import categorical_feature_analysis
from tools.full_model_importance import full_model_importance

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç
df = pd.read_csv("data/telecom_eda_data.csv")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ª–±—Ü—ã
print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã:", df.columns.tolist())
print("–ü—Ä–∏–º–µ—Ä –∑–Ω–∞—á–µ–Ω–∏–π Churn:", df["Churn"].dropna().unique())

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è —Ü–µ–ª–µ–≤–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
target_column = "Churn"

tools = [
    ("PrimaryFeatureFinder", primary_feature_finder),
    ("CorrelationAnalysis", correlation_analysis),
    ("DescriptiveStatsComparator", descriptive_stats_comparator),
    ("CategoricalFeatureAnalysis", categorical_feature_analysis),
    ("FullModelFeatureImportance", full_model_importance)
]

for name, func in tools:
    print(f"\nüîç –ó–∞–ø—É—Å–∫: {name}")
    result = func(df, target_column=target_column)
    print("–°—Ç–∞—Ç—É—Å:", result["status"])
    if result["status"] == "success":
        print("–ö—Ä–∞—Ç–∫–∏–π –≤—ã–≤–æ–¥:", result["summary"])
        print("–î–µ—Ç–∞–ª–∏:", list(result["details"].keys()))
    else:
        print("–û—à–∏–±–∫–∞:", result["error_message"])