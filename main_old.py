# main.py
# –° –Ω–∞—à–∏–º API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (( ,
# –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ollama, –Ω–æ —Ç–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –≤–æ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ agents —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º–ø–æ—Ä—Ç –∏ –º–æ–¥–µ–ª—å –Ω–∞ ollama.


import os
import pandas as pd
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ API
assert os.getenv("OPENAI_API_KEY"), "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OPENAI_API_KEY –≤ .env"
assert os.getenv("OPENAI_BASE_URL"), "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OPENAI_BASE_URL –≤ .env"

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
import sys
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '.')))

from agents.analyst_agent import create_analyst_agent
from agents.executor_agent import create_executor_agent
from agents.summarizer_agent import generate_summary
from agents.tools_wrapper import set_current_data, ALL_TOOLS


def main(data_path: str, target_column: str, output_report: str = "report.md"):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –∑–∞–ø—É—Å–∫–∞–µ—Ç –º—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç—á—ë—Ç.
    """
    # 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    print(f"üìÅ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ {data_path}...")
    df = pd.read_csv(data_path)
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {df.shape[0]} —Å—Ç—Ä–æ–∫, {df.shape[1]} —Å—Ç–æ–ª–±—Ü–æ–≤")

    # 2. –ü–µ—Ä–µ–¥–∞—ë–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç—É–ª–∑—ã
    set_current_data(df, target_column)

    # 3. –°–æ–∑–¥–∞—ë–º –∞–≥–µ–Ω—Ç–æ–≤
    print("\nüß† –°–æ–∑–¥–∞—ë–º –∞–≥–µ–Ω—Ç—Å–∫—É—é —Å–∏—Å—Ç–µ–º—É...")
    analyst = create_analyst_agent(ALL_TOOLS)
    executor = create_executor_agent(ALL_TOOLS, analyst["prompt"], analyst["llm"])

    # 4. –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
    print("\nüîç –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ –∞–≥–µ–Ω—Ç–∞–º–∏...\n")
    result = executor.invoke({
        "messages": [
            {
                "role": "user",
                "content": f"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–∞–Ω–Ω—ã–µ –∏ –Ω–∞–π–¥–∏, —á–µ–º –≥—Ä—É–ø–ø–∞ 1 –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –≥—Ä—É–ø–ø—ã 0 –ø–æ –ø—Ä–∏–∑–Ω–∞–∫—É '{target_column}'."
            }
        ]
    })

    # 5. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á—ë—Ç
    print("\nüìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á—ë—Ç–∞...")
    full_result_str = str(result)
    summary = generate_summary(full_result_str, filename=data_path.split("/")[-1])

    # 6. –°–æ—Ö—Ä–∞–Ω—è–µ–º
    with open(output_report, "w", encoding="utf-8") as f:
        f.write(summary)
    print(f"\nüéâ –û—Ç—á—ë—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {output_report}")


if __name__ == "__main__":
    main(
        data_path="data/telecom_eda_data.csv",
        target_column="Churn",
        output_report="report.md"
    )